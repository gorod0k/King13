/** This file is part of King Thirteen.
 * https://github.com/mvasilkov/board2024
 * @license Proprietary | Copyright (c) 2024 Mark Vasilkov
 */
'use strict'

/* Magical Power of the Mallet by ZUN
 * Transcribed by MTSranger (released under CC BY 4.0)
 * Edited by Mark Vasilkov
 */
const MUSIC = [
    [64, 0.0, 0.5, 40, 0.0, 0.25, 67, 0.04, 0.5, 71, 0.08, 0.5, 76, 0.12, 0.5, 47, 0.25, 0.5, 71, 0.5, 1.25, 52, 0.5, 0.75, 55, 0.75, 1.0],
    [59, 0.0, 0.25, 76, 0.25, 0.5, 55, 0.25, 0.5, 78, 0.5, 0.75, 52, 0.5, 0.75, 79, 0.75, 1.0, 47, 0.75, 1.0],
    [69, 0.0, 0.5, 45, 0.0, 0.25, 72, 0.04, 0.5, 76, 0.08, 0.5, 81, 0.12, 0.5, 52, 0.25, 0.5, 76, 0.5, 1.25, 57, 0.5, 0.75, 60, 0.75, 1.0],
    [64, 0.0, 0.25, 81, 0.25, 0.5, 60, 0.25, 0.5, 83, 0.5, 0.75, 57, 0.5, 0.75, 86, 0.75, 1.0, 52, 0.75, 1.0],
    [69, 0.0, 0.75, 50, 0.0, 0.25, 74, 0.04, 0.75, 78, 0.08, 0.75, 81, 0.12, 0.75, 57, 0.25, 0.5, 62, 0.5, 0.75, 79, 0.75, 1.0, 66, 0.75, 1.0],
    [78, 0.0, 0.25, 69, 0.0, 0.25, 79, 0.25, 0.375, 66, 0.25, 0.5, 78, 0.375, 0.625, 62, 0.5, 0.75, 74, 0.625, 1.0, 57, 0.75, 1.0],
    [59, 0.0, 1.0, 35, 0.0, 0.25, 63, 0.04, 1.0, 66, 0.08, 1.0, 71, 0.12, 1.0, 42, 0.25, 0.5, 47, 0.5, 0.75, 51, 0.75, 1.0],
    [63, 0.0, 1.0, 54, 0.0, 0.25, 66, 0.04, 1.0, 71, 0.08, 1.0, 75, 0.12, 1.0, 51, 0.25, 0.5, 47, 0.5, 0.75, 42, 0.75, 1.0],
    0,
    1,
    2,
    3,
    4,
    5,
    [64, 0.0, 2.0, 40, 0.0, 0.25, 67, 0.04, 2.0, 71, 0.08, 2.0, 76, 0.12, 2.0, 47, 0.25, 0.5, 52, 0.5, 0.75, 55, 0.75, 1.0],
    [64, 0.0, 0.25, 59, 0.25, 0.5, 55, 0.5, 0.75, 52, 0.75, 1.0],
    [64, 0.0, 0.125, 40, 0.0, 0.25, 71, 0.125, 0.25, 69, 0.25, 0.375, 47, 0.25, 0.5, 71, 0.375, 0.5, 74, 0.5, 0.625, 52, 0.5, 0.75, 71, 0.625, 0.75, 69, 0.75, 0.875, 55, 0.75, 1.0, 71, 0.875, 1.0],
    [64, 0.0, 0.125, 59, 0.0, 0.25, 71, 0.125, 0.25, 69, 0.25, 0.375, 55, 0.25, 0.5, 71, 0.375, 0.5, 74, 0.5, 0.625, 52, 0.5, 0.75, 71, 0.625, 0.75, 69, 0.75, 0.875, 47, 0.75, 1.0, 71, 0.875, 1.0],
    [66, 0.0, 0.125, 36, 0.0, 0.25, 67, 0.125, 0.25, 66, 0.25, 0.375, 43, 0.25, 0.5, 67, 0.375, 0.5, 71, 0.5, 0.625, 48, 0.5, 0.75, 67, 0.625, 0.75, 66, 0.75, 0.875, 52, 0.75, 1.0, 67, 0.875, 1.0],
    [66, 0.0, 0.125, 55, 0.0, 0.25, 67, 0.125, 0.25, 66, 0.25, 0.375, 52, 0.25, 0.5, 67, 0.375, 0.5, 71, 0.5, 0.625, 48, 0.5, 0.75, 67, 0.625, 0.75, 66, 0.75, 0.875, 43, 0.75, 1.0, 67, 0.875, 1.0],
    [62, 0.0, 0.125, 38, 0.0, 0.25, 69, 0.125, 0.25, 67, 0.25, 0.375, 45, 0.25, 0.5, 69, 0.375, 0.5, 74, 0.5, 0.625, 50, 0.5, 0.75, 69, 0.625, 0.75, 67, 0.75, 0.875, 54, 0.75, 1.0, 69, 0.875, 1.0],
    [62, 0.0, 0.125, 57, 0.0, 0.25, 69, 0.125, 0.25, 67, 0.25, 0.375, 54, 0.25, 0.5, 69, 0.375, 0.5, 74, 0.5, 0.625, 50, 0.5, 0.75, 69, 0.625, 0.75, 67, 0.75, 0.875, 45, 0.75, 1.0, 69, 0.875, 1.0],
    [63, 0.0, 0.125, 35, 0.0, 0.25, 71, 0.125, 0.25, 69, 0.25, 0.375, 42, 0.25, 0.5, 71, 0.375, 0.5, 75, 0.5, 0.625, 47, 0.5, 0.75, 71, 0.625, 0.75, 69, 0.75, 0.875, 51, 0.75, 1.0, 71, 0.875, 1.0],
    [63, 0.0, 0.125, 54, 0.0, 0.25, 71, 0.125, 0.25, 69, 0.25, 0.375, 51, 0.25, 0.5, 71, 0.375, 0.5, 75, 0.5, 0.625, 47, 0.5, 0.75, 71, 0.625, 0.75, 69, 0.75, 0.875, 42, 0.75, 1.0, 71, 0.875, 1.0],
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    [63, 0.0, 0.125, 47, 0.0, 0.25, 71, 0.125, 0.25, 69, 0.25, 0.375, 51, 0.25, 0.5, 71, 0.375, 0.5, 75, 0.5, 0.625, 54, 0.5, 0.75, 71, 0.625, 0.75, 75, 0.75, 0.875, 59, 0.75, 1.0, 78, 0.875, 1.0],
    [64, 0.0, 0.5, 40, 0.0, 0.125, 67, 0.04, 0.5, 71, 0.08, 0.5, 76, 0.12, 0.5, 47, 0.125, 0.25, 52, 0.25, 0.375, 55, 0.375, 0.5, 71, 0.5, 1.25, 67, 0.5, 1.25, 59, 0.5, 0.625, 55, 0.625, 0.75, 52, 0.75, 0.875, 47, 0.875, 1.0],
    [40, 0.0, 0.125, 52, 0.125, 0.25, 76, 0.25, 0.5, 71, 0.25, 0.5, 55, 0.25, 0.375, 59, 0.375, 0.5, 78, 0.5, 0.75, 71, 0.5, 0.75, 64, 0.5, 0.625, 59, 0.625, 0.75, 79, 0.75, 1.0, 71, 0.75, 1.0, 55, 0.75, 0.875, 52, 0.875, 1.0],
    [69, 0.0, 0.5, 45, 0.0, 0.125, 72, 0.04, 0.5, 76, 0.08, 0.5, 81, 0.12, 0.5, 52, 0.125, 0.25, 57, 0.25, 0.375, 60, 0.375, 0.5, 76, 0.5, 1.25, 72, 0.5, 1.25, 64, 0.5, 0.625, 60, 0.625, 0.75, 57, 0.75, 0.875, 52, 0.875, 1.0],
    [45, 0.0, 0.125, 57, 0.125, 0.25, 81, 0.25, 0.5, 76, 0.25, 0.5, 60, 0.25, 0.375, 64, 0.375, 0.5, 83, 0.5, 0.75, 76, 0.5, 0.75, 69, 0.5, 0.625, 64, 0.625, 0.75, 86, 0.75, 1.0, 78, 0.75, 1.0, 60, 0.75, 0.875, 57, 0.875, 1.0],
    [69, 0.0, 0.75, 50, 0.0, 0.125, 74, 0.04, 0.75, 78, 0.08, 0.75, 81, 0.12, 0.75, 54, 0.125, 0.25, 57, 0.25, 0.375, 62, 0.375, 0.5, 66, 0.5, 0.625, 62, 0.625, 0.75, 79, 0.75, 1.0, 57, 0.75, 0.875, 50, 0.875, 1.0],
    [78, 0.0, 0.25, 74, 0.0, 0.25, 38, 0.0, 0.125, 45, 0.125, 0.25, 79, 0.25, 0.375, 50, 0.25, 0.375, 78, 0.375, 0.625, 54, 0.375, 0.5, 57, 0.5, 0.625, 74, 0.625, 1.0, 54, 0.625, 0.75, 50, 0.75, 0.875, 45, 0.875, 1.0],
    [59, 0.0, 1.0, 35, 0.0, 0.125, 63, 0.04, 1.0, 66, 0.08, 1.0, 71, 0.12, 1.0, 42, 0.125, 0.25, 47, 0.25, 0.375, 51, 0.375, 0.5, 54, 0.5, 0.625, 51, 0.625, 0.75, 47, 0.75, 0.875, 42, 0.875, 1.0],
    [63, 0.0, 1.0, 47, 0.0, 0.125, 66, 0.04, 1.0, 71, 0.08, 1.0, 75, 0.12, 1.0, 51, 0.125, 0.25, 54, 0.25, 0.375, 59, 0.375, 0.5, 63, 0.5, 0.625, 59, 0.625, 0.75, 54, 0.75, 0.875, 51, 0.875, 1.0],
    32,
    33,
    34,
    35,
    36,
    37,
    [64, 0.0, 2.0, 40, 0.0, 0.125, 67, 0.04, 2.0, 71, 0.08, 2.0, 76, 0.12, 2.0, 47, 0.125, 0.25, 52, 0.25, 0.375, 55, 0.375, 0.5, 59, 0.5, 0.625, 55, 0.625, 0.75, 52, 0.75, 0.875, 47, 0.875, 1.0],
    [40, 0.0, 0.125, 52, 0.125, 0.25, 55, 0.25, 0.375, 59, 0.375, 0.5, 64, 0.5, 0.625, 67, 0.625, 0.75, 71, 0.75, 0.875, 76, 0.875, 1.0],
    [79, 0.0, 1.0, 76, 0.0, 1.0, 64, 0.0, 0.125, 67, 0.125, 0.25, 71, 0.25, 0.375, 67, 0.375, 0.5, 71, 0.5, 1.0],
    [78, 0.0, 0.5, 74, 0.0, 0.5, 62, 0.0, 0.25, 69, 0.25, 0.5, 81, 0.5, 0.75, 74, 0.5, 1.0, 86, 0.75, 1.0],
    [88, 0.0, 2.0, 84, 0.0, 2.0, 67, 0.0, 1.5, 60, 0.0, 1.5],
    [60, 0.5, 0.75, 67, 0.75, 1.0],
    [91, 0.0, 1.0, 88, 0.0, 1.0, 83, 0.0, 1.0, 79, 0.0, 0.25, 76, 0.25, 0.5, 71, 0.5, 0.75, 67, 0.75, 1.0],
    [81, 0.0, 0.3125, 62, 0.0, 1.0, 86, 0.04, 0.3125, 90, 0.08, 0.3125, 86, 0.3125, 0.625, 81, 0.625, 0.9375, 86, 0.9375, 1.25],
    [64, 0.25, 2.0, 71, 0.29, 2.0, 76, 0.33, 2.0, 79, 0.37, 2.0, 83, 0.41, 2.0, 88, 0.45, 2.0],
]

type PlayNoteFunction = (index: number, start: number, end: number) => void

export function play(note: PlayNoteFunction, bar: number) {
    if (bar > 54) return
    const part = ((MUSIC[bar] as any).push ? MUSIC[bar] : MUSIC[(MUSIC[bar] as number)]) as number[]

    for (let n = 0; n < part.length; n += 3) {
        note(part[n]!, part[n + 1]!, part[n + 2]!)
    }
}
